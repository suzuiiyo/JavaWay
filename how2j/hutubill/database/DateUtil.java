package hutubill.database;

import java.util.Calendar;
import java.util.Date;

public class DateUtil {
    static long millisecondsOfOneDay = 1000*60*60*24;

    //TODO  将java.util.Date类型转换成java.sql.Date类型
    public static java.sql.Date util2sql(java.util.Date d){
        //getTime()获取相对1970/1/1的时间
        return new java.sql.Date(d.getTime());
    }

    //获取今天,并且把时分秒和毫秒都设置为0，因为通过日期控件获取到的日期，就是没有时分秒和毫秒的
    public static Date today(){
        //Calendar获取实例用的是getInstance，而不是new?
        Calendar c = Calendar.getInstance();
        c.setTime(new Date());
        c.set(Calendar.HOUR_OF_DAY, 0);
        c.set(Calendar.MINUTE, 0);
        c.set(Calendar.SECOND, 0);
        c.set(Calendar.MILLISECOND, 0);
        return c.getTime();
    }
    //获取月初.使用Calendar获取本月第一天,在统计消费一览信息的时候，查看本月的消费数据,其实就是从数据库中去吧从本月第一天到最后一天的数据查出来，
    //在进行简单统计，所以需要一个获取本月第一天的方法
    public static Date monthBegin(){
        Calendar c = Calendar.getInstance();
        c.setTime(new Date());
        c.set(Calendar.DATE, 1);

        c.set(Calendar.HOUR_OF_DAY, 0);
        c.set(Calendar.MINUTE, 0);
        c.set(Calendar.SECOND, 0);
        c.set(Calendar.MILLISECOND, 0);

        return c.getTime();
    }
    //获取月末
    public static Date monthEnd(){
        Calendar c = Calendar.getInstance();
        c.setTime(new Date());
        c.set(Calendar.HOUR_OF_DAY, 0);
        c.set(Calendar.MINUTE, 0);
        c.set(Calendar.SECOND, 0);
        c.set(Calendar.MILLISECOND, 0);

        c.set(Calendar.DATE, 1);
        c.add(Calendar.MONTH, 1);
        c.add(Calendar.DATE, -1);
        return c.getTime();
    }
    //获取本月一共有多少天
    public static int thisMonthTotalDay(){
        long lastDayMilliSeconds = monthEnd().getTime();
        long firstDayMilliSeconds = monthBegin().getTime();
        return (int) ((lastDayMilliSeconds - firstDayMilliSeconds)/millisecondsOfOneDay) + 1;  //加1把firstDay算上
    }
    //获取本月还剩多少天
    public static int thisMonthLeftDay(){
        long lastDayMilliSeconds = monthEnd().getTime();
        long toDayMilliSeconds = today().getTime();
        return (int) ((lastDayMilliSeconds - toDayMilliSeconds)/millisecondsOfOneDay);  // + 1;  剩余天数不包含今天
    }

    public static void main(String[] args) {
        System.out.println(DateUtil.today());
        System.out.println(DateUtil.monthBegin());
        System.out.println(DateUtil.monthEnd());
        System.out.println(DateUtil.thisMonthTotalDay());
        System.out.println(DateUtil.thisMonthLeftDay());
    }
}